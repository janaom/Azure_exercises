    On the page for your new Cosmos DB account, in the pane on the left, select Data Explorer.
    In the Data Explorer page, select Launch quick start.
    In the New container tab, review the pre-populated settings for the sample database, and then select OK.
    Observe the status in the panel at the bottom of the screen until the SampleDB database and its SampleContainer container has been created (which may take a minute or so).

View and create items

    In the Data Explorer page, expand the SampleDB database and the SampleContainer container, and select Items to see a list of items in the container. The items represent addresses, each with a unique id and other properties.

    Select any of the items in the list to see a JSON representation of the item data.

    At the top of the page, select New Item to create a new blank item.

    Modify the JSON for the new item as follows, and then select Save.
    JSON 

    {
        "address": "1 Any St.",
        "id": "123456789"
    }

    After saving the new item, notice that additional metadata properties are added automatically.

Query the database

    In the Data Explorer page, select the New SQL Query icon.

    In the SQL Query editor, review the default query (SELECT * FROM c) and use the Execute Query button to run it.

    Review the results, which includes the full JSON representation of all items.

    Modify the query as follows:
    SQL 

SELECT c.id, c.address
FROM c
WHERE CONTAINS(c.address, "Any St.")

Use the Execute Query button to run the revised query and review the results, which includes JSON entities for any items with an address field containing the text "Any St.".

Close the SQL Query editor, discarding your changes.

You've seen how to create and query JSON entities in a Cosmos DB database by using the data explorer interface in the Azure portal. In a real scenario, an application developer would use one of the many programming language specific software development kits (SDKs) to call the core (SQL) API and work with data in the database.
